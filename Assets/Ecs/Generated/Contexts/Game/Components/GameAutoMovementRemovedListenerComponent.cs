//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public AutoMovementRemovedListenerComponent AutoMovementRemovedListener { get { return (AutoMovementRemovedListenerComponent)GetComponent(GameComponentsLookup.AutoMovementRemovedListener); } }
	public bool HasAutoMovementRemovedListener { get { return HasComponent(GameComponentsLookup.AutoMovementRemovedListener); } }

	public void AddAutoMovementRemovedListener()
	{
		var index = GameComponentsLookup.AutoMovementRemovedListener;
		var component = (AutoMovementRemovedListenerComponent)CreateComponent(index, typeof(AutoMovementRemovedListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceAutoMovementRemovedListener()
	{
		ReplaceComponent(GameComponentsLookup.AutoMovementRemovedListener, AutoMovementRemovedListener);
	}

	public void RemoveAutoMovementRemovedListener()
	{
		RemoveComponent(GameComponentsLookup.AutoMovementRemovedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherAutoMovementRemovedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> AutoMovementRemovedListener
	{
		get
		{
			if (_matcherAutoMovementRemovedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.AutoMovementRemovedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherAutoMovementRemovedListener = matcher;
			}

			return _matcherAutoMovementRemovedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeAutoMovementRemoved(OnGameAutoMovementRemoved value, bool invokeOnSubscribe = false)
	{
		var componentListener = HasAutoMovementRemovedListener
			? AutoMovementRemovedListener
			: (AutoMovementRemovedListenerComponent)CreateComponent(GameComponentsLookup.AutoMovementRemovedListener, typeof(AutoMovementRemovedListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.AutoMovementRemovedListener, componentListener);
		if(invokeOnSubscribe && !HasComponent(GameComponentsLookup.AutoMovement))
		{
			value(this);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameAutoMovementRemoved>(CreationIndex, value, UnsubscribeAutoMovementRemoved);
	}

	private void UnsubscribeAutoMovementRemoved(int creationIndex, OnGameAutoMovementRemoved value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.AutoMovementRemovedListener;
		var component = AutoMovementRemovedListener;
		component.Delegate -= value;
		if (AutoMovementRemovedListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
