//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public MaxHealthListenerComponent MaxHealthListener { get { return (MaxHealthListenerComponent)GetComponent(GameComponentsLookup.MaxHealthListener); } }
	public bool HasMaxHealthListener { get { return HasComponent(GameComponentsLookup.MaxHealthListener); } }

	public void AddMaxHealthListener()
	{
		var index = GameComponentsLookup.MaxHealthListener;
		var component = (MaxHealthListenerComponent)CreateComponent(index, typeof(MaxHealthListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceMaxHealthListener()
	{
		ReplaceComponent(GameComponentsLookup.MaxHealthListener, MaxHealthListener);
	}

	public void RemoveMaxHealthListener()
	{
		RemoveComponent(GameComponentsLookup.MaxHealthListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherMaxHealthListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> MaxHealthListener
	{
		get
		{
			if (_matcherMaxHealthListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.MaxHealthListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherMaxHealthListener = matcher;
			}

			return _matcherMaxHealthListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeMaxHealth(OnGameMaxHealth value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasMaxHealthListener
			? MaxHealthListener
			: (MaxHealthListenerComponent)CreateComponent(GameComponentsLookup.MaxHealthListener, typeof(MaxHealthListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.MaxHealthListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.MaxHealth))
		{
			var component = MaxHealth;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameMaxHealth>(CreationIndex, value, UnsubscribeMaxHealth);
	}

	private void UnsubscribeMaxHealth(int creationIndex, OnGameMaxHealth value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.MaxHealthListener;
		var component = MaxHealthListener;
		component.Delegate -= value;
		if (MaxHealthListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
