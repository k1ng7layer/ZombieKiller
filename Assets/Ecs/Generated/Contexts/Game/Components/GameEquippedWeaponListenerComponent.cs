//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public EquippedWeaponListenerComponent EquippedWeaponListener { get { return (EquippedWeaponListenerComponent)GetComponent(GameComponentsLookup.EquippedWeaponListener); } }
	public bool HasEquippedWeaponListener { get { return HasComponent(GameComponentsLookup.EquippedWeaponListener); } }

	public void AddEquippedWeaponListener()
	{
		var index = GameComponentsLookup.EquippedWeaponListener;
		var component = (EquippedWeaponListenerComponent)CreateComponent(index, typeof(EquippedWeaponListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceEquippedWeaponListener()
	{
		ReplaceComponent(GameComponentsLookup.EquippedWeaponListener, EquippedWeaponListener);
	}

	public void RemoveEquippedWeaponListener()
	{
		RemoveComponent(GameComponentsLookup.EquippedWeaponListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherEquippedWeaponListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> EquippedWeaponListener
	{
		get
		{
			if (_matcherEquippedWeaponListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.EquippedWeaponListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherEquippedWeaponListener = matcher;
			}

			return _matcherEquippedWeaponListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeEquippedWeapon(OnGameEquippedWeapon value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasEquippedWeaponListener
			? EquippedWeaponListener
			: (EquippedWeaponListenerComponent)CreateComponent(GameComponentsLookup.EquippedWeaponListener, typeof(EquippedWeaponListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.EquippedWeaponListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.EquippedWeapon))
		{
			var component = EquippedWeapon;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameEquippedWeapon>(CreationIndex, value, UnsubscribeEquippedWeapon);
	}

	private void UnsubscribeEquippedWeapon(int creationIndex, OnGameEquippedWeapon value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.EquippedWeaponListener;
		var component = EquippedWeaponListener;
		component.Delegate -= value;
		if (EquippedWeaponListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
