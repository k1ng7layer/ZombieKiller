//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public MoveDirectionListenerComponent MoveDirectionListener { get { return (MoveDirectionListenerComponent)GetComponent(GameComponentsLookup.MoveDirectionListener); } }
	public bool HasMoveDirectionListener { get { return HasComponent(GameComponentsLookup.MoveDirectionListener); } }

	public void AddMoveDirectionListener()
	{
		var index = GameComponentsLookup.MoveDirectionListener;
		var component = (MoveDirectionListenerComponent)CreateComponent(index, typeof(MoveDirectionListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceMoveDirectionListener()
	{
		ReplaceComponent(GameComponentsLookup.MoveDirectionListener, MoveDirectionListener);
	}

	public void RemoveMoveDirectionListener()
	{
		RemoveComponent(GameComponentsLookup.MoveDirectionListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherMoveDirectionListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> MoveDirectionListener
	{
		get
		{
			if (_matcherMoveDirectionListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveDirectionListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherMoveDirectionListener = matcher;
			}

			return _matcherMoveDirectionListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeMoveDirection(OnGameMoveDirection value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasMoveDirectionListener
			? MoveDirectionListener
			: (MoveDirectionListenerComponent)CreateComponent(GameComponentsLookup.MoveDirectionListener, typeof(MoveDirectionListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.MoveDirectionListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.MoveDirection))
		{
			var component = MoveDirection;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameMoveDirection>(CreationIndex, value, UnsubscribeMoveDirection);
	}

	private void UnsubscribeMoveDirection(int creationIndex, OnGameMoveDirection value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.MoveDirectionListener;
		var component = MoveDirectionListener;
		component.Delegate -= value;
		if (MoveDirectionListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
