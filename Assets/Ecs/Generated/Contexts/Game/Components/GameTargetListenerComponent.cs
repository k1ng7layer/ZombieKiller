//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public TargetListenerComponent TargetListener { get { return (TargetListenerComponent)GetComponent(GameComponentsLookup.TargetListener); } }
	public bool HasTargetListener { get { return HasComponent(GameComponentsLookup.TargetListener); } }

	public void AddTargetListener()
	{
		var index = GameComponentsLookup.TargetListener;
		var component = (TargetListenerComponent)CreateComponent(index, typeof(TargetListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceTargetListener()
	{
		ReplaceComponent(GameComponentsLookup.TargetListener, TargetListener);
	}

	public void RemoveTargetListener()
	{
		RemoveComponent(GameComponentsLookup.TargetListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherTargetListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> TargetListener
	{
		get
		{
			if (_matcherTargetListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherTargetListener = matcher;
			}

			return _matcherTargetListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeTarget(OnGameTarget value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasTargetListener
			? TargetListener
			: (TargetListenerComponent)CreateComponent(GameComponentsLookup.TargetListener, typeof(TargetListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.TargetListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.Target))
		{
			var component = Target;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameTarget>(CreationIndex, value, UnsubscribeTarget);
	}

	private void UnsubscribeTarget(int creationIndex, OnGameTarget value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.TargetListener;
		var component = TargetListener;
		component.Delegate -= value;
		if (TargetListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
