//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public ActiveRemovedListenerComponent ActiveRemovedListener { get { return (ActiveRemovedListenerComponent)GetComponent(GameComponentsLookup.ActiveRemovedListener); } }
	public bool HasActiveRemovedListener { get { return HasComponent(GameComponentsLookup.ActiveRemovedListener); } }

	public void AddActiveRemovedListener()
	{
		var index = GameComponentsLookup.ActiveRemovedListener;
		var component = (ActiveRemovedListenerComponent)CreateComponent(index, typeof(ActiveRemovedListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceActiveRemovedListener()
	{
		ReplaceComponent(GameComponentsLookup.ActiveRemovedListener, ActiveRemovedListener);
	}

	public void RemoveActiveRemovedListener()
	{
		RemoveComponent(GameComponentsLookup.ActiveRemovedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherActiveRemovedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> ActiveRemovedListener
	{
		get
		{
			if (_matcherActiveRemovedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActiveRemovedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherActiveRemovedListener = matcher;
			}

			return _matcherActiveRemovedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeActiveRemoved(OnGameActiveRemoved value, bool invokeOnSubscribe = false)
	{
		var componentListener = HasActiveRemovedListener
			? ActiveRemovedListener
			: (ActiveRemovedListenerComponent)CreateComponent(GameComponentsLookup.ActiveRemovedListener, typeof(ActiveRemovedListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.ActiveRemovedListener, componentListener);
		if(invokeOnSubscribe && !HasComponent(GameComponentsLookup.Active))
		{
			value(this);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameActiveRemoved>(CreationIndex, value, UnsubscribeActiveRemoved);
	}

	private void UnsubscribeActiveRemoved(int creationIndex, OnGameActiveRemoved value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.ActiveRemovedListener;
		var component = ActiveRemovedListener;
		component.Delegate -= value;
		if (ActiveRemovedListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
