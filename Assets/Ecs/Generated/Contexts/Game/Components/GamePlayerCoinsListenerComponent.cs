//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public PlayerCoinsListenerComponent PlayerCoinsListener { get { return (PlayerCoinsListenerComponent)GetComponent(GameComponentsLookup.PlayerCoinsListener); } }
	public bool HasPlayerCoinsListener { get { return HasComponent(GameComponentsLookup.PlayerCoinsListener); } }

	public void AddPlayerCoinsListener()
	{
		var index = GameComponentsLookup.PlayerCoinsListener;
		var component = (PlayerCoinsListenerComponent)CreateComponent(index, typeof(PlayerCoinsListenerComponent));
		AddComponent(index, component);
	}

	public void ReplacePlayerCoinsListener()
	{
		ReplaceComponent(GameComponentsLookup.PlayerCoinsListener, PlayerCoinsListener);
	}

	public void RemovePlayerCoinsListener()
	{
		RemoveComponent(GameComponentsLookup.PlayerCoinsListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherPlayerCoinsListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> PlayerCoinsListener
	{
		get
		{
			if (_matcherPlayerCoinsListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerCoinsListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherPlayerCoinsListener = matcher;
			}

			return _matcherPlayerCoinsListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribePlayerCoins(OnGamePlayerCoins value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasPlayerCoinsListener
			? PlayerCoinsListener
			: (PlayerCoinsListenerComponent)CreateComponent(GameComponentsLookup.PlayerCoinsListener, typeof(PlayerCoinsListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.PlayerCoinsListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.PlayerCoins))
		{
			var component = PlayerCoins;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGamePlayerCoins>(CreationIndex, value, UnsubscribePlayerCoins);
	}

	private void UnsubscribePlayerCoins(int creationIndex, OnGamePlayerCoins value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.PlayerCoinsListener;
		var component = PlayerCoinsListener;
		component.Delegate -= value;
		if (PlayerCoinsListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
