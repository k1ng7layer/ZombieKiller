//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public VisibleListenerComponent VisibleListener { get { return (VisibleListenerComponent)GetComponent(GameComponentsLookup.VisibleListener); } }
	public bool HasVisibleListener { get { return HasComponent(GameComponentsLookup.VisibleListener); } }

	public void AddVisibleListener()
	{
		var index = GameComponentsLookup.VisibleListener;
		var component = (VisibleListenerComponent)CreateComponent(index, typeof(VisibleListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceVisibleListener()
	{
		ReplaceComponent(GameComponentsLookup.VisibleListener, VisibleListener);
	}

	public void RemoveVisibleListener()
	{
		RemoveComponent(GameComponentsLookup.VisibleListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherVisibleListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> VisibleListener
	{
		get
		{
			if (_matcherVisibleListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.VisibleListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherVisibleListener = matcher;
			}

			return _matcherVisibleListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeVisible(OnGameVisible value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasVisibleListener
			? VisibleListener
			: (VisibleListenerComponent)CreateComponent(GameComponentsLookup.VisibleListener, typeof(VisibleListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.VisibleListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.Visible))
		{
			value(this);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameVisible>(CreationIndex, value, UnsubscribeVisible);
	}

	private void UnsubscribeVisible(int creationIndex, OnGameVisible value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.VisibleListener;
		var component = VisibleListener;
		component.Delegate -= value;
		if (VisibleListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
