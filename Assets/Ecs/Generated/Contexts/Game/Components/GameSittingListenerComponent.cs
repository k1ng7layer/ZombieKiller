//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public SittingListenerComponent SittingListener { get { return (SittingListenerComponent)GetComponent(GameComponentsLookup.SittingListener); } }
	public bool HasSittingListener { get { return HasComponent(GameComponentsLookup.SittingListener); } }

	public void AddSittingListener()
	{
		var index = GameComponentsLookup.SittingListener;
		var component = (SittingListenerComponent)CreateComponent(index, typeof(SittingListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceSittingListener()
	{
		ReplaceComponent(GameComponentsLookup.SittingListener, SittingListener);
	}

	public void RemoveSittingListener()
	{
		RemoveComponent(GameComponentsLookup.SittingListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherSittingListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> SittingListener
	{
		get
		{
			if (_matcherSittingListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.SittingListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherSittingListener = matcher;
			}

			return _matcherSittingListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeSitting(OnGameSitting value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasSittingListener
			? SittingListener
			: (SittingListenerComponent)CreateComponent(GameComponentsLookup.SittingListener, typeof(SittingListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.SittingListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.Sitting))
		{
			value(this);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameSitting>(CreationIndex, value, UnsubscribeSitting);
	}

	private void UnsubscribeSitting(int creationIndex, OnGameSitting value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.SittingListener;
		var component = SittingListener;
		component.Delegate -= value;
		if (SittingListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
