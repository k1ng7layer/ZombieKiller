//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public PerformingAttackListenerComponent PerformingAttackListener { get { return (PerformingAttackListenerComponent)GetComponent(GameComponentsLookup.PerformingAttackListener); } }
	public bool HasPerformingAttackListener { get { return HasComponent(GameComponentsLookup.PerformingAttackListener); } }

	public void AddPerformingAttackListener()
	{
		var index = GameComponentsLookup.PerformingAttackListener;
		var component = (PerformingAttackListenerComponent)CreateComponent(index, typeof(PerformingAttackListenerComponent));
		AddComponent(index, component);
	}

	public void ReplacePerformingAttackListener()
	{
		ReplaceComponent(GameComponentsLookup.PerformingAttackListener, PerformingAttackListener);
	}

	public void RemovePerformingAttackListener()
	{
		RemoveComponent(GameComponentsLookup.PerformingAttackListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherPerformingAttackListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> PerformingAttackListener
	{
		get
		{
			if (_matcherPerformingAttackListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.PerformingAttackListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherPerformingAttackListener = matcher;
			}

			return _matcherPerformingAttackListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribePerformingAttack(OnGamePerformingAttack value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasPerformingAttackListener
			? PerformingAttackListener
			: (PerformingAttackListenerComponent)CreateComponent(GameComponentsLookup.PerformingAttackListener, typeof(PerformingAttackListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.PerformingAttackListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.PerformingAttack))
		{
			value(this);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGamePerformingAttack>(CreationIndex, value, UnsubscribePerformingAttack);
	}

	private void UnsubscribePerformingAttack(int creationIndex, OnGamePerformingAttack value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.PerformingAttackListener;
		var component = PerformingAttackListener;
		component.Delegate -= value;
		if (PerformingAttackListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
