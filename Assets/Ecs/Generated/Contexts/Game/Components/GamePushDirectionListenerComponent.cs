//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public PushDirectionListenerComponent PushDirectionListener { get { return (PushDirectionListenerComponent)GetComponent(GameComponentsLookup.PushDirectionListener); } }
	public bool HasPushDirectionListener { get { return HasComponent(GameComponentsLookup.PushDirectionListener); } }

	public void AddPushDirectionListener()
	{
		var index = GameComponentsLookup.PushDirectionListener;
		var component = (PushDirectionListenerComponent)CreateComponent(index, typeof(PushDirectionListenerComponent));
		AddComponent(index, component);
	}

	public void ReplacePushDirectionListener()
	{
		ReplaceComponent(GameComponentsLookup.PushDirectionListener, PushDirectionListener);
	}

	public void RemovePushDirectionListener()
	{
		RemoveComponent(GameComponentsLookup.PushDirectionListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherPushDirectionListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> PushDirectionListener
	{
		get
		{
			if (_matcherPushDirectionListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.PushDirectionListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherPushDirectionListener = matcher;
			}

			return _matcherPushDirectionListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribePushDirection(OnGamePushDirection value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasPushDirectionListener
			? PushDirectionListener
			: (PushDirectionListenerComponent)CreateComponent(GameComponentsLookup.PushDirectionListener, typeof(PushDirectionListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.PushDirectionListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.PushDirection))
		{
			var component = PushDirection;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGamePushDirection>(CreationIndex, value, UnsubscribePushDirection);
	}

	private void UnsubscribePushDirection(int creationIndex, OnGamePushDirection value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.PushDirectionListener;
		var component = PushDirectionListener;
		component.Delegate -= value;
		if (PushDirectionListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
