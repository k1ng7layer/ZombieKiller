//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public ActiveAbilityListenerComponent ActiveAbilityListener { get { return (ActiveAbilityListenerComponent)GetComponent(GameComponentsLookup.ActiveAbilityListener); } }
	public bool HasActiveAbilityListener { get { return HasComponent(GameComponentsLookup.ActiveAbilityListener); } }

	public void AddActiveAbilityListener()
	{
		var index = GameComponentsLookup.ActiveAbilityListener;
		var component = (ActiveAbilityListenerComponent)CreateComponent(index, typeof(ActiveAbilityListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceActiveAbilityListener()
	{
		ReplaceComponent(GameComponentsLookup.ActiveAbilityListener, ActiveAbilityListener);
	}

	public void RemoveActiveAbilityListener()
	{
		RemoveComponent(GameComponentsLookup.ActiveAbilityListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherActiveAbilityListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> ActiveAbilityListener
	{
		get
		{
			if (_matcherActiveAbilityListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActiveAbilityListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherActiveAbilityListener = matcher;
			}

			return _matcherActiveAbilityListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeActiveAbility(OnGameActiveAbility value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasActiveAbilityListener
			? ActiveAbilityListener
			: (ActiveAbilityListenerComponent)CreateComponent(GameComponentsLookup.ActiveAbilityListener, typeof(ActiveAbilityListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.ActiveAbilityListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.ActiveAbility))
		{
			var component = ActiveAbility;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameActiveAbility>(CreationIndex, value, UnsubscribeActiveAbility);
	}

	private void UnsubscribeActiveAbility(int creationIndex, OnGameActiveAbility value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.ActiveAbilityListener;
		var component = ActiveAbilityListener;
		component.Delegate -= value;
		if (ActiveAbilityListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
