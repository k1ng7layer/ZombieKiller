//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public MoveDirectionRemovedListenerComponent MoveDirectionRemovedListener { get { return (MoveDirectionRemovedListenerComponent)GetComponent(GameComponentsLookup.MoveDirectionRemovedListener); } }
	public bool HasMoveDirectionRemovedListener { get { return HasComponent(GameComponentsLookup.MoveDirectionRemovedListener); } }

	public void AddMoveDirectionRemovedListener()
	{
		var index = GameComponentsLookup.MoveDirectionRemovedListener;
		var component = (MoveDirectionRemovedListenerComponent)CreateComponent(index, typeof(MoveDirectionRemovedListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceMoveDirectionRemovedListener()
	{
		ReplaceComponent(GameComponentsLookup.MoveDirectionRemovedListener, MoveDirectionRemovedListener);
	}

	public void RemoveMoveDirectionRemovedListener()
	{
		RemoveComponent(GameComponentsLookup.MoveDirectionRemovedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherMoveDirectionRemovedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> MoveDirectionRemovedListener
	{
		get
		{
			if (_matcherMoveDirectionRemovedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveDirectionRemovedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherMoveDirectionRemovedListener = matcher;
			}

			return _matcherMoveDirectionRemovedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeMoveDirectionRemoved(OnGameMoveDirectionRemoved value, bool invokeOnSubscribe = false)
	{
		var componentListener = HasMoveDirectionRemovedListener
			? MoveDirectionRemovedListener
			: (MoveDirectionRemovedListenerComponent)CreateComponent(GameComponentsLookup.MoveDirectionRemovedListener, typeof(MoveDirectionRemovedListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.MoveDirectionRemovedListener, componentListener);
		if(invokeOnSubscribe && !HasComponent(GameComponentsLookup.MoveDirection))
		{
			value(this);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameMoveDirectionRemoved>(CreationIndex, value, UnsubscribeMoveDirectionRemoved);
	}

	private void UnsubscribeMoveDirectionRemoved(int creationIndex, OnGameMoveDirectionRemoved value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.MoveDirectionRemovedListener;
		var component = MoveDirectionRemovedListener;
		component.Delegate -= value;
		if (MoveDirectionRemovedListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
