//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public PositionListenerComponent PositionListener { get { return (PositionListenerComponent)GetComponent(GameComponentsLookup.PositionListener); } }
	public bool HasPositionListener { get { return HasComponent(GameComponentsLookup.PositionListener); } }

	public void AddPositionListener()
	{
		var index = GameComponentsLookup.PositionListener;
		var component = (PositionListenerComponent)CreateComponent(index, typeof(PositionListenerComponent));
		AddComponent(index, component);
	}

	public void ReplacePositionListener()
	{
		ReplaceComponent(GameComponentsLookup.PositionListener, PositionListener);
	}

	public void RemovePositionListener()
	{
		RemoveComponent(GameComponentsLookup.PositionListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherPositionListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> PositionListener
	{
		get
		{
			if (_matcherPositionListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.PositionListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherPositionListener = matcher;
			}

			return _matcherPositionListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribePosition(OnGamePosition value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasPositionListener
			? PositionListener
			: (PositionListenerComponent)CreateComponent(GameComponentsLookup.PositionListener, typeof(PositionListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.PositionListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.Position))
		{
			var component = Position;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGamePosition>(CreationIndex, value, UnsubscribePosition);
	}

	private void UnsubscribePosition(int creationIndex, OnGamePosition value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.PositionListener;
		var component = PositionListener;
		component.Delegate -= value;
		if (PositionListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
