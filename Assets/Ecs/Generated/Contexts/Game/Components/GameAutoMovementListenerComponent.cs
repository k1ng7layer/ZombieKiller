//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public AutoMovementListenerComponent AutoMovementListener { get { return (AutoMovementListenerComponent)GetComponent(GameComponentsLookup.AutoMovementListener); } }
	public bool HasAutoMovementListener { get { return HasComponent(GameComponentsLookup.AutoMovementListener); } }

	public void AddAutoMovementListener()
	{
		var index = GameComponentsLookup.AutoMovementListener;
		var component = (AutoMovementListenerComponent)CreateComponent(index, typeof(AutoMovementListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceAutoMovementListener()
	{
		ReplaceComponent(GameComponentsLookup.AutoMovementListener, AutoMovementListener);
	}

	public void RemoveAutoMovementListener()
	{
		RemoveComponent(GameComponentsLookup.AutoMovementListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherAutoMovementListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> AutoMovementListener
	{
		get
		{
			if (_matcherAutoMovementListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.AutoMovementListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherAutoMovementListener = matcher;
			}

			return _matcherAutoMovementListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeAutoMovement(OnGameAutoMovement value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasAutoMovementListener
			? AutoMovementListener
			: (AutoMovementListenerComponent)CreateComponent(GameComponentsLookup.AutoMovementListener, typeof(AutoMovementListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.AutoMovementListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.AutoMovement))
		{
			var component = AutoMovement;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameAutoMovement>(CreationIndex, value, UnsubscribeAutoMovement);
	}

	private void UnsubscribeAutoMovement(int creationIndex, OnGameAutoMovement value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.AutoMovementListener;
		var component = AutoMovementListener;
		component.Delegate -= value;
		if (AutoMovementListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
