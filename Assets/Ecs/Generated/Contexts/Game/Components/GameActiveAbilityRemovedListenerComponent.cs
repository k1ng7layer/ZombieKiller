//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public ActiveAbilityRemovedListenerComponent ActiveAbilityRemovedListener { get { return (ActiveAbilityRemovedListenerComponent)GetComponent(GameComponentsLookup.ActiveAbilityRemovedListener); } }
	public bool HasActiveAbilityRemovedListener { get { return HasComponent(GameComponentsLookup.ActiveAbilityRemovedListener); } }

	public void AddActiveAbilityRemovedListener()
	{
		var index = GameComponentsLookup.ActiveAbilityRemovedListener;
		var component = (ActiveAbilityRemovedListenerComponent)CreateComponent(index, typeof(ActiveAbilityRemovedListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceActiveAbilityRemovedListener()
	{
		ReplaceComponent(GameComponentsLookup.ActiveAbilityRemovedListener, ActiveAbilityRemovedListener);
	}

	public void RemoveActiveAbilityRemovedListener()
	{
		RemoveComponent(GameComponentsLookup.ActiveAbilityRemovedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherActiveAbilityRemovedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> ActiveAbilityRemovedListener
	{
		get
		{
			if (_matcherActiveAbilityRemovedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActiveAbilityRemovedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherActiveAbilityRemovedListener = matcher;
			}

			return _matcherActiveAbilityRemovedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeActiveAbilityRemoved(OnGameActiveAbilityRemoved value, bool invokeOnSubscribe = false)
	{
		var componentListener = HasActiveAbilityRemovedListener
			? ActiveAbilityRemovedListener
			: (ActiveAbilityRemovedListenerComponent)CreateComponent(GameComponentsLookup.ActiveAbilityRemovedListener, typeof(ActiveAbilityRemovedListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.ActiveAbilityRemovedListener, componentListener);
		if(invokeOnSubscribe && !HasComponent(GameComponentsLookup.ActiveAbility))
		{
			value(this);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameActiveAbilityRemoved>(CreationIndex, value, UnsubscribeActiveAbilityRemoved);
	}

	private void UnsubscribeActiveAbilityRemoved(int creationIndex, OnGameActiveAbilityRemoved value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.ActiveAbilityRemovedListener;
		var component = ActiveAbilityRemovedListener;
		component.Delegate -= value;
		if (ActiveAbilityRemovedListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
