//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public CameraModeListenerComponent CameraModeListener { get { return (CameraModeListenerComponent)GetComponent(GameComponentsLookup.CameraModeListener); } }
	public bool HasCameraModeListener { get { return HasComponent(GameComponentsLookup.CameraModeListener); } }

	public void AddCameraModeListener()
	{
		var index = GameComponentsLookup.CameraModeListener;
		var component = (CameraModeListenerComponent)CreateComponent(index, typeof(CameraModeListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceCameraModeListener()
	{
		ReplaceComponent(GameComponentsLookup.CameraModeListener, CameraModeListener);
	}

	public void RemoveCameraModeListener()
	{
		RemoveComponent(GameComponentsLookup.CameraModeListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherCameraModeListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> CameraModeListener
	{
		get
		{
			if (_matcherCameraModeListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraModeListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherCameraModeListener = matcher;
			}

			return _matcherCameraModeListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeCameraMode(OnGameCameraMode value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasCameraModeListener
			? CameraModeListener
			: (CameraModeListenerComponent)CreateComponent(GameComponentsLookup.CameraModeListener, typeof(CameraModeListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.CameraModeListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.CameraMode))
		{
			var component = CameraMode;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameCameraMode>(CreationIndex, value, UnsubscribeCameraMode);
	}

	private void UnsubscribeCameraMode(int creationIndex, OnGameCameraMode value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.CameraModeListener;
		var component = CameraModeListener;
		component.Delegate -= value;
		if (CameraModeListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
