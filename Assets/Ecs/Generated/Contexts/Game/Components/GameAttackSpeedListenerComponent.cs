//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public AttackSpeedListenerComponent AttackSpeedListener { get { return (AttackSpeedListenerComponent)GetComponent(GameComponentsLookup.AttackSpeedListener); } }
	public bool HasAttackSpeedListener { get { return HasComponent(GameComponentsLookup.AttackSpeedListener); } }

	public void AddAttackSpeedListener()
	{
		var index = GameComponentsLookup.AttackSpeedListener;
		var component = (AttackSpeedListenerComponent)CreateComponent(index, typeof(AttackSpeedListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceAttackSpeedListener()
	{
		ReplaceComponent(GameComponentsLookup.AttackSpeedListener, AttackSpeedListener);
	}

	public void RemoveAttackSpeedListener()
	{
		RemoveComponent(GameComponentsLookup.AttackSpeedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherAttackSpeedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> AttackSpeedListener
	{
		get
		{
			if (_matcherAttackSpeedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.AttackSpeedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherAttackSpeedListener = matcher;
			}

			return _matcherAttackSpeedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeAttackSpeed(OnGameAttackSpeed value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasAttackSpeedListener
			? AttackSpeedListener
			: (AttackSpeedListenerComponent)CreateComponent(GameComponentsLookup.AttackSpeedListener, typeof(AttackSpeedListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.AttackSpeedListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.AttackSpeed))
		{
			var component = AttackSpeed;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameAttackSpeed>(CreationIndex, value, UnsubscribeAttackSpeed);
	}

	private void UnsubscribeAttackSpeed(int creationIndex, OnGameAttackSpeed value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.AttackSpeedListener;
		var component = AttackSpeedListener;
		component.Delegate -= value;
		if (AttackSpeedListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
