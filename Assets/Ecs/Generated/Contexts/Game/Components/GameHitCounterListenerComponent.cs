//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public HitCounterListenerComponent HitCounterListener { get { return (HitCounterListenerComponent)GetComponent(GameComponentsLookup.HitCounterListener); } }
	public bool HasHitCounterListener { get { return HasComponent(GameComponentsLookup.HitCounterListener); } }

	public void AddHitCounterListener()
	{
		var index = GameComponentsLookup.HitCounterListener;
		var component = (HitCounterListenerComponent)CreateComponent(index, typeof(HitCounterListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceHitCounterListener()
	{
		ReplaceComponent(GameComponentsLookup.HitCounterListener, HitCounterListener);
	}

	public void RemoveHitCounterListener()
	{
		RemoveComponent(GameComponentsLookup.HitCounterListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherHitCounterListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> HitCounterListener
	{
		get
		{
			if (_matcherHitCounterListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.HitCounterListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherHitCounterListener = matcher;
			}

			return _matcherHitCounterListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeHitCounter(OnGameHitCounter value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasHitCounterListener
			? HitCounterListener
			: (HitCounterListenerComponent)CreateComponent(GameComponentsLookup.HitCounterListener, typeof(HitCounterListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.HitCounterListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.HitCounter))
		{
			var component = HitCounter;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameHitCounter>(CreationIndex, value, UnsubscribeHitCounter);
	}

	private void UnsubscribeHitCounter(int creationIndex, OnGameHitCounter value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.HitCounterListener;
		var component = HitCounterListener;
		component.Delegate -= value;
		if (HitCounterListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
