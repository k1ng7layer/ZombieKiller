//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public UnitStateListenerComponent UnitStateListener { get { return (UnitStateListenerComponent)GetComponent(GameComponentsLookup.UnitStateListener); } }
	public bool HasUnitStateListener { get { return HasComponent(GameComponentsLookup.UnitStateListener); } }

	public void AddUnitStateListener()
	{
		var index = GameComponentsLookup.UnitStateListener;
		var component = (UnitStateListenerComponent)CreateComponent(index, typeof(UnitStateListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceUnitStateListener()
	{
		ReplaceComponent(GameComponentsLookup.UnitStateListener, UnitStateListener);
	}

	public void RemoveUnitStateListener()
	{
		RemoveComponent(GameComponentsLookup.UnitStateListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherUnitStateListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> UnitStateListener
	{
		get
		{
			if (_matcherUnitStateListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.UnitStateListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherUnitStateListener = matcher;
			}

			return _matcherUnitStateListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeUnitState(OnGameUnitState value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasUnitStateListener
			? UnitStateListener
			: (UnitStateListenerComponent)CreateComponent(GameComponentsLookup.UnitStateListener, typeof(UnitStateListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.UnitStateListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.UnitState))
		{
			var component = UnitState;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameUnitState>(CreationIndex, value, UnsubscribeUnitState);
	}

	private void UnsubscribeUnitState(int creationIndex, OnGameUnitState value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.UnitStateListener;
		var component = UnitStateListener;
		component.Delegate -= value;
		if (UnitStateListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
