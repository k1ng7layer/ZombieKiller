//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using JCMG.EntitasRedux;

public static class PowerUpComponentsLookup
{
	public const int Destroyed = 0;
	public const int Uid = 1;
	public const int Active = 2;
	public const int Owner = 3;
	public const int Timer = 4;
	public const int LifeTime = 5;
	public const int PowerUp = 6;
	public const int Resource = 7;
	public const int PowerUpActiveListener = 8;
	public const int PowerUpActiveRemovedListener = 9;
	public const int PowerUpDestroyedListener = 10;
	public const int PowerUpListener = 11;
	public const int PowerUpRemovedListener = 12;
	public const int PowerUpTimerListener = 13;
	public const int ResourceListener = 14;

	public const int TotalComponents = 15;

	public static readonly string[] ComponentNames =
	{
		"Destroyed",
		"Uid",
		"Active",
		"Owner",
		"Timer",
		"LifeTime",
		"PowerUp",
		"Resource",
		"PowerUpActiveListener",
		"PowerUpActiveRemovedListener",
		"PowerUpDestroyedListener",
		"PowerUpListener",
		"PowerUpRemovedListener",
		"PowerUpTimerListener",
		"ResourceListener"
	};

	public static readonly System.Type[] ComponentTypes =
	{
		typeof(Ecs.Common.Components.DestroyedComponent),
		typeof(Ecs.Common.Components.UidComponent),
		typeof(Ecs.Game.Components.ActiveComponent),
		typeof(Ecs.Game.Components.OwnerComponent),
		typeof(Ecs.Game.Components.TimerComponent),
		typeof(Ecs.PowerUp.Components.LifeTimeComponent),
		typeof(Ecs.PowerUp.Components.PowerUpComponent),
		typeof(Ecs.PowerUp.Components.ResourceComponent),
		typeof(PowerUpActiveListenerComponent),
		typeof(PowerUpActiveRemovedListenerComponent),
		typeof(PowerUpDestroyedListenerComponent),
		typeof(PowerUpListenerComponent),
		typeof(PowerUpRemovedListenerComponent),
		typeof(PowerUpTimerListenerComponent),
		typeof(ResourceListenerComponent)
	};

	public static readonly Dictionary<Type, int> ComponentTypeToIndex = new Dictionary<Type, int>
	{
		{ typeof(Ecs.Common.Components.DestroyedComponent), 0 },
		{ typeof(Ecs.Common.Components.UidComponent), 1 },
		{ typeof(Ecs.Game.Components.ActiveComponent), 2 },
		{ typeof(Ecs.Game.Components.OwnerComponent), 3 },
		{ typeof(Ecs.Game.Components.TimerComponent), 4 },
		{ typeof(Ecs.PowerUp.Components.LifeTimeComponent), 5 },
		{ typeof(Ecs.PowerUp.Components.PowerUpComponent), 6 },
		{ typeof(Ecs.PowerUp.Components.ResourceComponent), 7 },
		{ typeof(PowerUpActiveListenerComponent), 8 },
		{ typeof(PowerUpActiveRemovedListenerComponent), 9 },
		{ typeof(PowerUpDestroyedListenerComponent), 10 },
		{ typeof(PowerUpListenerComponent), 11 },
		{ typeof(PowerUpRemovedListenerComponent), 12 },
		{ typeof(PowerUpTimerListenerComponent), 13 },
		{ typeof(ResourceListenerComponent), 14 }
	};

	/// <summary>
	/// Returns a component index based on the passed <paramref name="component"/> type; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="component"></param>
	public static int GetComponentIndex(IComponent component)
	{
		return GetComponentIndex(component.GetType());
	}

	/// <summary>
	/// Returns a component index based on the passed <paramref name="componentType"/>; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="componentType"></param>
	public static int GetComponentIndex(Type componentType)
	{
		return ComponentTypeToIndex.TryGetValue(componentType, out var index) ? index : -1;
	}
}
