//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using JCMG.EntitasRedux;

public sealed class VisibleRemovedEventSystem : JCMG.EntitasRedux.ReactiveSystem<GameEntity>
{

	public VisibleRemovedEventSystem(IContext<GameEntity> context) : base(context)
	{
	}

	protected override JCMG.EntitasRedux.ICollector<GameEntity> GetTrigger(JCMG.EntitasRedux.IContext<GameEntity> context)
	{
		return new SlimCollector<GameEntity>(context, GameComponentsLookup.Visible, EventType.Removed);
	}

	protected override bool Filter(GameEntity entity)
	{
		return !entity.IsVisible && entity.HasVisibleRemovedListener;
	}

	protected override void Execute(System.Collections.Generic.IEnumerable<GameEntity> entities)
	{
		foreach (var e in entities)
		{
			
			e.VisibleRemovedListener.Invoke(e);
		}
	}
}
